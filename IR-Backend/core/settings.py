"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_pn@-21be+r#io^h-j1*!iie#45uhh=r%7dv%109nkw25fdcoa'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'user',
    'Profile',
    'jobs',
    'interview',
    'feedback',
    'application',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {},
    # user application
    'irusers':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'irusers',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    'ircompany':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'ircompany',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    'companylocations':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'companylocations',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    'companyprojects':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'companyprojects',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    'jobseeker':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'jobseeker',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },


    'skillss':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'skillss',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },


    'jobseekerprojects':{
       'ENGINE': 'django.db.backends.postgresql',
        'NAME':'jobseekerprojects',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    # jobs application
    'jobss':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'jobss',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    # ai_model application
    'jobinterview':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'jobinterview',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    'int_evaluation':{
       'ENGINE': 'django.db.backends.postgresql',
        'NAME':'int_evaluation',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    #application 
    'saved_jobs':{
       'ENGINE': 'django.db.backends.postgresql',
        'NAME':'saved_jobs',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    # analytics application
    'analytics':{
       'ENGINE': 'django.db.backends.postgresql',
        'NAME':'analytics',
        'USER':'postgres',
        'PASSWORD':'password123',  
    },

    # feedback application
    'comments':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'comments',
        'USER':'postgres',
        'PASSWORD':'password123',  
    }
}

#routers
DATABASE_ROUTERS = ['user.router.AuthRouter','jobs.router.jobRouter','Profile.router.jobseekerRouter', 'Profile.router.companyRouter',
                    'Profile.router.compprojRouter', 'Profile.router.complocRouter','Profile.router.jobseekerskillRouter',
                      'Profile.router.jobseekerprojRouter' , 'application.router.jobanalyticsRouter', 'application.router.savedjobRouter',
                      'feedback.router.commentRouter','interview.router.interviewRouter','interview.router.evaluationRouter']


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'AUTH_HEADER_TYPES': ('Bearer', ),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken', )
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'user.userAccount'
